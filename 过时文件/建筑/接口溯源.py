import 日志
import 建筑.通用 as 建筑通用
import 建筑.无带 as 建筑无带
import 文件.通用 as 文件函数

# 假设基础解析接口完了

# 任何建筑，可以由自身主导一次单一输入 + 单一输出
# 但不能同时主导多个输入或多个输出
# 比如小矿机可以输出到传送带，依靠自身
# 但大矿机不行，因为他有多个口，他的输出由传送带主导
# 本文件就是找到那些不由自身主导的接口，并找到他们的源头


# 二级接口解析
# 接口序号：-1 - 15
# 自身主导：true false
# 目标建筑ID: 0 - 114514
# 连接类型：传送带、分拣器、堆叠
# 源头建筑ID: 0 - 114514
# 尽头建筑ID: 0 - 114514
# 是否冲突：true false

def 溯源单个分拣器接口(该分拣器, 所有建筑):
    输入目标ID = 该分拣器["一级接口解析"]["输入目标ID"]
    输出目标ID = 该分拣器["一级接口解析"]["输出目标ID"]
    自身的输入接口序号 = 该分拣器["inputToSlot"]
    该分拣器["二级接口解析"]
    pass
    # 输入输出的建筑类型不溯源了，到时候还要再溯源一遍

def 溯源单个普通建筑接口(该建筑, 所有建筑):
    # inputObjIdx = 向目标堆叠
    # outputObjIdx = 向单一目标输出（如矿机）
    pass

def 溯源被动建筑关系(建筑主导, 建筑依附, 所有建筑):
    pass


def 溯源单个行为(连接方式, 该建筑, 所有建筑):
    # 这段代码错的，等下改
    if "接口溯源" not in 该建筑:
        该建筑["接口溯源"] = {}
    
    输入目标ID = 该建筑["一级接口解析"].get("输入目标ID","-1")
    输出目标ID = 该建筑["一级接口解析"].get("输出目标ID","-1")
    堆叠目标ID = 该建筑["一级接口解析"].get("堆叠目标ID","-1")
    if 输入目标ID != -1:
        pass

def 溯源主动建筑接口(该建筑, 所有建筑):
    if "接口溯源" not in 该建筑:
        该建筑["接口溯源"] = {}
    
    if 建筑通用.是传送带吗(该建筑):
        return 溯源单个传送带接口(该建筑, 所有建筑)
    elif 建筑通用.是分拣器吗(该建筑):
        return 溯源单个分拣器接口(该建筑, 所有建筑)
    else:
        return 溯源单个普通建筑接口(该建筑, 所有建筑)





    该建筑["接口溯源"]["接口溯源"]

def 溯源建筑接口(所有建筑):
    for 建筑 in 所有建筑:
        溯源单个建筑接口(建筑, 所有建筑)

if __name__ == '__main__':
    import sys
    蓝图 = 文件函数.读取文件(sys.argv[1])
    溯源建筑接口(蓝图['buildings'])
    文件函数.保存文件(sys.argv[2], 蓝图)

def 溯源单个传送带接口(该传送带, 所有建筑):
    该传送带["接口溯源"]["接口数据"] = {}




